# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
      - refs/tags/*
stages:
  - stage: Build
    jobs:
      - job: install_build_rust_linux_macos
        displayName: "build on linux and mac"
        strategy:
          matrix:
            linux-64:
              IMAGE_NAME: "ubuntu-latest"
              RUST_ARCH: "x86_64-unknown-linux-musl"
              RUST_TOOLCHAIN: "stable"
            # currently, ring cannot be compiled with musl
            # linux-32:
            #   IMAGE_NAME: "ubuntu-latest"
            #   RUST_ARCH: "i686-unknown-linux-musl"
            #   RUST_TOOLCHAIN: "stable"
            macos-64: 
              IMAGE_NAME: "macOS-10.14"
              RUST_ARCH: "x86_64-apple-darwin"
              RUST_TOOLCHAIN: "stable"
        pool:
          vmImage: "$(IMAGE_NAME)"
        steps:
          - script: |
              curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain $RUST_TOOLCHAIN -y
              export PATH=$PATH:$HOME/.cargo/bin
              rustup toolchain install "${RUST_TOOLCHAIN}-${RUST_ARCH}"
              rustup target install "${RUST_ARCH}"
              if [ "$IMAGE_NAME" = "ubuntu-latest" ]; then
                sudo apt-get install -y gcc-multilib musl musl-dev musl-tools libssl-dev
              fi
            displayName: 'download and install rustup script'
          - script: "PATH=$PATH:$HOME/.cargo/bin cargo build --release --target $RUST_ARCH"
            displayName: "cargo build"
          - task: PowerShell@2
            inputs:
              targetType: inline
              script: |
                Copy-Item "target/$($env:RUST_ARCH)/release/idcfcli" "$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/idcfcli_$($env:RUST_ARCH)"
            displayName: copy artifacts to staging directory
          - script: |
              ls $BUILD_ARTIFACTSTAGINGDIRECTORY
              export
            displayName: list staging directory
          - publish: "$(Build.ArtifactStagingDirectory)"
            artifact: idcfcli_$(RUST_TOOLCHAIN)_$(RUST_ARCH)
      - job: install_build_rust_windows
        displayName: "build on windows"
        strategy:
          matrix:
            windows-64:
              RUST_ARCH: "x86_64-pc-windows-msvc"
              RUST_TOOLCHAIN: "stable"
            windows-32:
              RUST_ARCH: "i686-pc-windows-msvc"
              RUST_TOOLCHAIN: "stable"
        pool:
          vmImage: windows-2019
        steps:
          - script: |
              curl -sSf -o rustup-init.exe https://static.rust-lang.org/rustup/dist/%RUST_ARCH%/rustup-init.exe
              rustup-init.exe -y --default-toolchain %RUST_TOOLCHAIN%
              set PATH=%PATH%;%USERPROFILE%\.cargo\bin
              rustup target add %RUST_ARCH%
            displayName: "installing rustup"
          - script: "cargo build --release --target %RUST_ARCH%"
          - task: PowerShell@2
            inputs:
              targetType: inline
              script: |
                Copy-Item "target/$($env:RUST_ARCH)/release/idcfcli.exe" "$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/idcfcli_$($env:RUST_ARCH).exe"
                Copy-Item "target/$($env:RUST_ARCH)/release/idcfcli.pdb" "$($env:BUILD_ARTIFACTSTAGINGDIRECTORY)/idcfcli_$($env:RUST_ARCH).pdb"
            displayName: copy artifacts to staging directory
          - script: |
              set
              dir %BUILD_ARTIFACTSTAGINGDIRECTORY%
            displayName: list staging directory
          - publish: "$(Build.ArtifactStagingDirectory)"
            artifact: idcfcli_$(RUST_TOOLCHAIN)_$(RUST_ARCH)
  - stage: Release
    condition: "startsWith(variables['Build.SourceBranch'], 'refs/tags/')"
    jobs:
      - job: github_release
        displayName: "Github Release"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: download win-x64-msvc
            inputs:
              artifact: idcfcli_stable_x86_64-pc-windows-msvc
              path: "$(Build.ArtifactsStagingDirectory)"
          - task: DownloadPipelineArtifact@2
            displayName: download win-x86-msvc
            inputs:
              artifact: idcfcli_stable_i686-pc-windows-msvc
              path: "$(Build.ArtifactsStagingDirectory)"
          - task: DownloadPipelineArtifact@2
            displayName: download linux-x64-musl
            inputs:
              artifact: idcfcli_stable_x86_64-unknown-linux-musl
              path: "$(Build.ArtifactsStagingDirectory)"
          - task: DownloadPipelineArtifact@2
            displayName: download osx-x64-darwin
            inputs:
              artifact: idcfcli_stable_x86_64-apple-darwin
              path: "$(Build.ArtifactsStagingDirectory)"
          - task: GitHubRelease@0
            displayName: "releasing github"
            inputs:
              gitHubConnection: "idcfcli-github"
              action: create
              target: "$(Build.SourceVersion)"
              assets: "$(Build.ArtifactsStagingDirectory)/*"
              isDraft: true

