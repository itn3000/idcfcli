# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
      - refs/tags/*
stages:
  - stage: Build
    jobs:
      - job: install_build_rust_linux_macos
        displayName: "build on linux and mac"
        strategy:
          matrix:
            linux-64:
              IMAGE_NAME: "ubuntu-latest"
              RUST_ARCH: "x86_64-unknown-linux-musl"
              RUST_TOOLCHAIN: "stable"
            linux-32:
              IMAGE_NAME: "ubuntu-latest"
              RUST_ARCH: "i686-unknown-linux-musl"
              RUST_TOOLCHAIN: "stable"
            macos-64: 
              IMAGE_NAME: "macOS-10.14"
              RUST_ARCH: "x86_64-apple-darwin"
              RUST_TOOLCHAIN: "stable"
        pool:
          vmImage: "$(IMAGE_NAME)"
        steps:
          - script: |
              curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain $RUST_TOOLCHAIN --default-host $RUST_ARCH -y
            displayName: 'download and install rustup script'
          - script: "PATH=$PATH:$HOME/.cargo/bin cargo build --release"
            displayName: "cargo build"
          - publish: "$(System.DefaultWorkingDirectory)/target/release/idcfcli"
            artifact: "idcfcli_$(RUST_TOOLCHAIN)_$(RUST_ARCH)"
      - job: install_build_rust_windows
        displayName: "build on windows"
        strategy:
          matrix:
            windows-64:
              RUST_ARCH: "x86_64-pc-windows-msvc"
              RUST_TOOLCHAIN: "stable"
            windows-32:
              RUST_ARCH: "i686-pc-windows-msvc"
              RUST_TOOLCHAIN: "stable"
        pool:
          vmImage: windows-2019
        steps:
          - script: |
              curl -sSf -o rustup-init.exe https://win.rustup.rs
              rustup-init.exe -y --default-toolchain %RUST_TOOLCHAIN% --default-host %RUST_ARCH%
              set PATH=%PATH%;%USERPROFILE%\.cargo\bin
            displayName: "installing rustup"
          - script: "cargo build --release"
          - publish: "$(System.DefaultWorkingDirectory)/target/release/idcfcli.exe"
            artifact: idcfcli_$(RUST_TOOLCHAIN)_$(RUST_ARCH)
          - publish: "$(System.DefaultWorkingDirectory)/target/release/idcfcli.pdb"
            artifact: idcfcli_pdb_$(RUST_TOOLCHAIN)_$(RUST_ARCH)
  - stage: Release
    condition: "startsWith(variables['Build.SourceBranch'], 'refs/tags/')"
    jobs:
      - job: github_release
        displayName: "Github Release"
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - download: download_artifacts
            displayName: downloading artfifacts
            patterns: "**/idcfcli*"
          - task: GitHubRelease@0
            displayName: "releasing github"
            inputs:
              gitHubConnection: "idcfcli-github"
              action: create
              target: "$(Build.SourceVersion)"
              assets: "$(Pipeline.Workspace)/idcfcli*/**/*"
              isDraft: true

